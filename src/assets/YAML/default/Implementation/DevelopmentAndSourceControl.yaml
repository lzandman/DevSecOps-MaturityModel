# yaml-language-server: $schema=../../schemas/dsomm-schema-implementation.json
---
Implementation:
  Development and Source Control:
    Local development linting & style checks performed:
      risk: Insecure or unmaintenable code base.
      measure: >-
        Integrate static code analysis tools in IDEs.
      difficultyOfImplementation:
        knowledge: 1
        time: 1
        resources: 1
      usefulness: 2
      level: 5
      description: ""
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/stylecop
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/sonarqube
      references:
        samm2:
        - V-ST-1-A
        iso27001-2017:
        - ISO 27001:2017 mapping is missing
        iso27001-2022:
        - ISO 27001:2022 mapping is missing
      isImplemented: false
      evidence: ""
      comments: ""
    API design validation:
      risk: Creation of insecure or non-compliant API.
      measure: |
        Design contract-first APIs using an interface description language such as OpenAPI, AsyncAPI or SOAP
        and validate the specification using specific tools.
        Checks should be integrated in IDEs and CI/CD pipelines.
      difficultyOfImplementation:
        knowledge: 2
        time: 2
        resources: 2
      usefulness: 4
      level: 3
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/stoplight-spectral
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/api-oas-checker
      references:
        samm2:
        - V-ST-1-A
        iso27001-2017:
        - 14.2.1  
        - 14.2.5
        iso27001-2022:
        - 8.25  # Secure development lifecycle
        - 8.27  # Secure system architecture and engineering principles
        - 8.28  # Secure coding
      isImplemented: false
      evidence: ""
      comments: ""
    Source Control Protection:
      risk: Intentional or accidental alterations in critical branches like master.
      measure: >-
        Define source code management system policies (e.g. branch protection rules,
        mandatory code reviews, ...)
        to ensure that changes to critical branches are only possible under defined conditions.
        These policies can be implemented at repository level or organization level,
        depending on the source code management system.
      difficultyOfImplementation:
        knowledge: 2
        time: 1
        resources: 2
      usefulness: 4
      level: 2
      implementation:
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/azuredevops
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/github-policies
      - $ref: src/assets/YAML/default/implementations.yaml#/implementations/signing-of-commits-protection
      references:
        samm2:
        - O-EM-1-A
        iso27001-2017:
        - Peer review - four eyes principle is not explicitly required by ISO 27001
        - 6.1.2
        - 14.2.1
        iso27001-2022:
        - Peer review - four eyes principle is not explicitly required by ISO 27001
        - 5.3
        - 8.25
      isImplemented: false
      evidence: ""
      comments: ""
    Versioning:
      risk: Deployment of untracked artifacts.
      measure: >-
        Version artifacts in order to identify deployed features and issues.
        This includes application and infrastructure code, jenkins configuration, container and virtual machine images.
      difficultyOfImplementation:
        knowledge: 3
        time: 3
        resources: 3
      usefulness: 5
      level: 1
      dependsOn:
      - Defined deployment process
      implementation: []
      references:
        samm2:
        - O-EM-1-A
        iso27001-2017:
        - Not explicitly covered by ISO 27001 - too specific
        - 12.1.1
        - 12.1.2
        - 14.2.2
        iso27001-2022:
        - Not explicitly covered by ISO 27001 - too specific
        - 5.37
        - 8.32
      isImplemented: false
      evidence: ""
      comments: ""

...
